package edu.hm.hafner.renderer.io;

import org.apache.commons.io.FileUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.File;
import java.io.IOException;
import java.nio.charset.StandardCharsets;

/**
 * Reads a SVG file generated by the ECharts library to return a SVG as string in Java.
 */
public class SvgParser {
    private static final Logger LOG = LoggerFactory.getLogger(SvgParser.class);

    private static final String ERROR_MESSAGE = "Failed to export render due to system errors.";

    /**
     * Reads the SVG render file by Trireme and parses it as string in Java.
     * @param triremeWorkingDirectoryPath File path of the SVG render file to be read
     * @return SVG render file as string
     */
    public String parseSvgAsString(String triremeWorkingDirectoryPath, String svgFileName) {
        String svgAsString;
        try {
            final String svgFilePath = triremeWorkingDirectoryPath + "/" + svgFileName;
            final File svgFile = new File(svgFilePath);
            svgAsString = FileUtils.readFileToString(svgFile, StandardCharsets.UTF_8);
        } catch (IOException e) {
            throw new IllegalStateException(ERROR_MESSAGE);
        }

        if (svgAsString.isEmpty()) {
            throw new IllegalStateException(ERROR_MESSAGE);
        }
        LOG.info("SVG render string created.");
        return svgAsString;
    }
}